package site_cours.dao;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import site_cours.models.User;

public class UserDAO extends DAO<User> {

	public UserDAO() {
		super();
	}

	@Override
	public ArrayList<User> getAll() {
		ArrayList<User> alUsers = new ArrayList<User>();
		try {
 			Statement stmt = connect.createStatement();
 			ResultSet rsUsers = stmt.executeQuery("SELECT idUser, login, mdp, mail FROM utilisateurs");
 			
 			while(rsUsers.next()) {
 				User objUser = new User(rsUsers.getInt("idUser"), rsUsers.getString("login"), rsUsers.getString("mdp"), rsUsers.getString("mail"));
 				alUsers.add(objUser
 						);
 			}
 			rsUsers.close();
 		} catch(SQLException e) { e.printStackTrace(); }
		
		return alUsers;
	}

	@Override
	public boolean create(User obj) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean delete(User obj) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean update(User obj) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public User find(int id) {
		// TODO Auto-generated method stub
		return null;
	}

	public User authenticate(String pseudo, String mdp) {
		
		User objUser = null;
		try {
			PreparedStatement stmt = connect.prepareStatement("SELECT idUSer, login, mdp, mail FROM utilisateurs"
						+ "WHERE login=? AND mdp=?");
			
			stmt.setString(1, pseudo);
			stmt.setString(2, mdp);
			ResultSet rsUsers = stmt.executeQuery();
			
			rsUsers.first();
			if(rsUsers.getRow() == 1) {
				 objUser = new User(rsUsers.getInt("idUser"), rsUsers.getString("login"),
									rsUsers.getString("mdp"), rsUsers.getString("mail"));
			}
			rsUsers.close();
			//Maconnection.fermer(); //??
			
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("Erreur Requete: authenticate()");
		}
		
		
		
		return objUser;
	}

}
